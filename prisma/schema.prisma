datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  name              String?
  email             String?         @unique
  emailVerified     DateTime?
  isVerified        Boolean         @default(false)
  image             String?
  hashedPassword    String?
  role              Role            @default(USER)
  resetToken        String?         
  resetTokenExpiry  DateTime?
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  verificationToken String?         @unique
  reviews           Review[]
}

enum Role {
  USER
  ADMIN
}

model Product {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  brand       String
  category    String
  inStock     Boolean
  images       Image[]   // Embedded array of images
  reviews     Review[]
  sizes       Size[]     // Embedding sizes directly as an array of objects
}

type Image {
  color     String
  colorCode String
  imageUrl  String // Ensure the field name matches what's used in the API
}

type Size {
  size   String   // Size value (e.g., "39", "40", "41")
}

model Review {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  productId   String   @db.ObjectId
  rating      Int
  comment     String
  createdDate DateTime @default(now())

  Product     Product  @relation(fields: [productId], references: [id])
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
